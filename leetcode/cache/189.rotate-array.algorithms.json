{"id":189,"fid":"189","name":"轮转数组","slug":"rotate-array","link":"https://leetcode.cn/problems/rotate-array/description/","percent":44.95502324020883,"level":"Medium","category":"algorithms","en_name":"Rotate Array","cn_name":"轮转数组","totalAC":"887.8K","totalSubmit":"2M","likes":2165,"dislikes":0,"desc":"<p>给定一个整数数组 <code>nums</code>，将数组中的元素向右轮转 <code>k</code><em>&nbsp;</em>个位置，其中&nbsp;<code>k</code><em>&nbsp;</em>是非负数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,2,3,4,5,6,7], k = 3\n<strong>输出:</strong> <code>[5,6,7,1,2,3,4]</code>\n<strong>解释:</strong>\n向右轮转 1 步: <code>[7,1,2,3,4,5,6]</code>\n向右轮转 2 步: <code>[6,7,1,2,3,4,5]\n</code>向右轮转 3 步: <code>[5,6,7,1,2,3,4]</code>\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [-1,-100,3,99], k = 2\n<strong>输出：</strong>[3,99,-1,-100]\n<strong>解释:</strong> \n向右轮转 1 步: [99,-1,-100,3]\n向右轮转 2 步: [3,99,-1,-100]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong></p>\n\n<ul>\n\t<li>尽可能想出更多的解决方案，至少有 <strong>三种</strong> 不同的方法可以解决这个问题。</li>\n\t<li>你可以使用空间复杂度为&nbsp;<code>O(1)</code> 的&nbsp;<strong>原地&nbsp;</strong>算法解决这个问题吗？</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    void rotate(vector<int>& nums, int k) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public void rotate(int[] nums, int k) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def rotate(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def rotate(self, nums: List[int], k: int) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\""},{"value":"c","text":"C","defaultCode":"void rotate(int* nums, int numsSize, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public void Rotate(int[] nums, int k) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar rotate = function(nums, k) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"/**\n Do not return anything, modify nums in-place instead.\n */\nfunction rotate(nums: number[], k: number): void {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return NULL\n     */\n    function rotate(&$nums, $k) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func rotate(_ nums: inout [Int], _ k: Int) {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun rotate(nums: IntArray, k: Int): Unit {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  void rotate(List<int> nums, int k) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func rotate(nums []int, k int)  {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef rotate(nums, k)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def rotate(nums: Array[Int], k: Int): Unit = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn rotate(nums: &mut Vec<i32>, k: i32) {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (rotate nums k)\n  (-> (listof exact-integer?) exact-integer? void?)\n\n  )"}],"testcase":"[1,2,3,4,5,6,7]\n3","testable":true,"templateMeta":{"name":"rotate","params":[{"name":"nums","type":"integer[]"},{"name":"k","type":"integer"}],"return":{"type":"void"},"output":{"paramindex":0}}}