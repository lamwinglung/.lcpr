{"id":795,"fid":"779","name":"第K个语法符号","slug":"k-th-symbol-in-grammar","link":"https://leetcode.cn/problems/k-th-symbol-in-grammar/description/","percent":49.88657262619379,"level":"Medium","category":"algorithms","en_name":"K-th Symbol in Grammar","cn_name":"第K个语法符号","totalAC":"53.5K","totalSubmit":"107.3K","likes":302,"dislikes":0,"desc":"<p>我们构建了一个包含 <code>n</code> 行(&nbsp;<strong>索引从 1&nbsp; 开始&nbsp;</strong>)的表。首先在第一行我们写上一个 <code>0</code>。接下来的每一行，将前一行中的<code>0</code>替换为<code>01</code>，<code>1</code>替换为<code>10</code>。</p>\n\n<ul>\n\t<li>例如，对于 <code>n = 3</code> ，第 <code>1</code> 行是 <code>0</code> ，第 <code>2</code> 行是 <code>01</code> ，第3行是 <code>0110</code> 。</li>\n</ul>\n\n<p>给定行数&nbsp;<code>n</code>&nbsp;和序数 <code>k</code>，返回第 <code>n</code> 行中第 <code>k</code>&nbsp;个字符。（&nbsp;<code>k</code>&nbsp;<strong>从索引 1 开始</strong>）</p>\n\n<p><br />\n<strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 1, k = 1\n<strong>输出:</strong> 0\n<strong>解释: </strong>第一行：<u>0</u>\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 2, k = 1\n<strong>输出:</strong> 0\n<strong>解释:</strong> \n第一行: 0 \n第二行: <u>0</u>1\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 2, k = 2\n<strong>输出:</strong> 1\n<strong>解释:</strong>\n第一行: 0\n第二行: 0<u>1</u>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 30</code></li>\n\t<li><code>1 &lt;= k &lt;= 2<sup>n - 1</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int kthGrammar(int n, int k) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int kthGrammar(int n, int k) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def kthGrammar(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def kthGrammar(self, n: int, k: int) -> int:"},{"value":"c","text":"C","defaultCode":"int kthGrammar(int n, int k) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int KthGrammar(int n, int k) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @param {number} k\n * @return {number}\n */\nvar kthGrammar = function(n, k) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function kthGrammar(n: number, k: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer\n     */\n    function kthGrammar($n, $k) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func kthGrammar(_ n: Int, _ k: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun kthGrammar(n: Int, k: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int kthGrammar(int n, int k) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func kthGrammar(n int, k int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @param {Integer} k\n# @return {Integer}\ndef kth_grammar(n, k)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def kthGrammar(n: Int, k: Int): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn kth_grammar(n: i32, k: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (kth-grammar n k)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec kth_grammar(N :: integer(), K :: integer()) -> integer().\nkth_grammar(N, K) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec kth_grammar(n :: integer, k :: integer) :: integer\n  def kth_grammar(n, k) do\n    \n  end\nend"}],"testcase":"1\n1","testable":true,"templateMeta":{"name":"kthGrammar","params":[{"name":"n","type":"integer"},{"name":"k","type":"integer"}],"return":{"type":"integer"}}}