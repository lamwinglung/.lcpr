{"id":3199,"fid":"2928","name":"给小朋友们分糖果 I","slug":"distribute-candies-among-children-i","link":"https://leetcode.cn/problems/distribute-candies-among-children-i/description/","percent":74.20924574209246,"level":"Easy","category":"algorithms","en_name":"Distribute Candies Among Children I","cn_name":"给小朋友们分糖果 I","totalAC":"20.1K","totalSubmit":"24.3K","likes":56,"dislikes":0,"desc":"<p>给你两个正整数&nbsp;<code>n</code> 和&nbsp;<code>limit</code>&nbsp;。</p>\n\n<p>请你将 <code>n</code>&nbsp;颗糖果分给 <code>3</code>&nbsp;位小朋友，确保没有任何小朋友得到超过 <code>limit</code>&nbsp;颗糖果，请你返回满足此条件下的&nbsp;<strong>总方案数</strong>&nbsp;。</p>\n\n<p>&nbsp;</p>\n\n<p><strong class=\"example\">示例 1：</strong></p>\n\n<pre>\n<b>输入：</b>n = 5, limit = 2\n<b>输出：</b>3\n<b>解释：</b>总共有 3 种方法分配 5 颗糖果，且每位小朋友的糖果数不超过 2 ：(1, 2, 2) ，(2, 1, 2) 和 (2, 2, 1) 。\n</pre>\n\n<p><strong class=\"example\">示例 2：</strong></p>\n\n<pre>\n<b>输入：</b>n = 3, limit = 3\n<b>输出：</b>10\n<b>解释：</b>总共有 10 种方法分配 3 颗糖果，且每位小朋友的糖果数不超过 3 ：(0, 0, 3) ，(0, 1, 2) ，(0, 2, 1) ，(0, 3, 0) ，(1, 0, 2) ，(1, 1, 1) ，(1, 2, 0) ，(2, 0, 1) ，(2, 1, 0) 和 (3, 0, 0) 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 50</code></li>\n\t<li><code>1 &lt;= limit &lt;= 50</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int distributeCandies(int n, int limit) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int distributeCandies(int n, int limit) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def distributeCandies(self, n, limit):\n        \"\"\"\n        :type n: int\n        :type limit: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def distributeCandies(self, n: int, limit: int) -> int:"},{"value":"c","text":"C","defaultCode":"int distributeCandies(int n, int limit) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int DistributeCandies(int n, int limit) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @param {number} limit\n * @return {number}\n */\nvar distributeCandies = function(n, limit) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function distributeCandies(n: number, limit: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $limit\n     * @return Integer\n     */\n    function distributeCandies($n, $limit) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func distributeCandies(_ n: Int, _ limit: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun distributeCandies(n: Int, limit: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int distributeCandies(int n, int limit) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func distributeCandies(n int, limit int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @param {Integer} limit\n# @return {Integer}\ndef distribute_candies(n, limit)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def distributeCandies(n: Int, limit: Int): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn distribute_candies(n: i32, limit: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (distribute-candies n limit)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec distribute_candies(N :: integer(), Limit :: integer()) -> integer().\ndistribute_candies(N, Limit) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec distribute_candies(n :: integer, limit :: integer) :: integer\n  def distribute_candies(n, limit) do\n    \n  end\nend"}],"testcase":"5\n2","testable":true,"templateMeta":{"name":"distributeCandies","params":[{"name":"n","type":"integer"},{"type":"integer","name":"limit"}],"return":{"type":"integer"}}}