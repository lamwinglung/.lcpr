{"id":1055,"fid":"1010","name":"总持续时间可被 60 整除的歌曲","slug":"pairs-of-songs-with-total-durations-divisible-by-60","link":"https://leetcode.cn/problems/pairs-of-songs-with-total-durations-divisible-by-60/description/","percent":49.93519987486872,"level":"Medium","category":"algorithms","en_name":"Pairs of Songs With Total Durations Divisible by 60","cn_name":"总持续时间可被 60 整除的歌曲","totalAC":"44.8K","totalSubmit":"89.7K","likes":292,"dislikes":0,"desc":"<p>在歌曲列表中，第 <code>i</code> 首歌曲的持续时间为 <code>time[i]</code> 秒。</p>\n\n<p>返回其总持续时间（以秒为单位）可被 <code>60</code> 整除的歌曲对的数量。形式上，我们希望下标数字 <code>i</code> 和 <code>j</code> 满足&nbsp; <code>i &lt; j</code> 且有&nbsp;<code>(time[i] + time[j]) % 60 == 0</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>time = [30,20,150,100,40]\n<strong>输出：</strong>3\n<strong>解释：</strong>这三对的总持续时间可被 60 整除：\n(time[0] = 30, time[2] = 150): 总持续时间 180\n(time[1] = 20, time[3] = 100): 总持续时间 120\n(time[1] = 20, time[4] = 40): 总持续时间 60\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>time = [60,60,60]\n<strong>输出：</strong>3\n<strong>解释：</strong>所有三对的总持续时间都是 120，可以被 60 整除。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= time.length &lt;= 6 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int numPairsDivisibleBy60(vector<int>& time) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int numPairsDivisibleBy60(int[] time) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numPairsDivisibleBy60(self, time):\n        \"\"\"\n        :type time: List[int]\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numPairsDivisibleBy60(self, time: List[int]) -> int:"},{"value":"c","text":"C","defaultCode":"int numPairsDivisibleBy60(int* time, int timeSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NumPairsDivisibleBy60(int[] time) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} time\n * @return {number}\n */\nvar numPairsDivisibleBy60 = function(time) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function numPairsDivisibleBy60(time: number[]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $time\n     * @return Integer\n     */\n    function numPairsDivisibleBy60($time) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numPairsDivisibleBy60(_ time: [Int]) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numPairsDivisibleBy60(time: IntArray): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int numPairsDivisibleBy60(List<int> time) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func numPairsDivisibleBy60(time []int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} time\n# @return {Integer}\ndef num_pairs_divisible_by60(time)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numPairsDivisibleBy60(time: Array[Int]): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn num_pairs_divisible_by60(time: Vec<i32>) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (num-pairs-divisible-by60 time)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec num_pairs_divisible_by60(Time :: [integer()]) -> integer().\nnum_pairs_divisible_by60(Time) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec num_pairs_divisible_by60(time :: [integer]) :: integer\n  def num_pairs_divisible_by60(time) do\n    \n  end\nend"}],"testcase":"[30,20,150,100,40]","testable":true,"templateMeta":{"name":"numPairsDivisibleBy60","params":[{"name":"time","type":"integer[]"}],"return":{"type":"integer"}}}