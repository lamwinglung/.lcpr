{"id":947,"fid":"911","name":"在线选举","slug":"online-election","link":"https://leetcode.cn/problems/online-election/description/","percent":53.898593266284905,"level":"Medium","category":"algorithms","en_name":"Online Election","cn_name":"在线选举","totalAC":"33.8K","totalSubmit":"62.6K","likes":161,"dislikes":0,"desc":"<p>给你两个整数数组 <code>persons</code> 和 <code>times</code> 。在选举中，第&nbsp;<code>i</code>&nbsp;张票是在时刻为&nbsp;<code>times[i]</code>&nbsp;时投给候选人 <code>persons[i]</code>&nbsp;的。</p>\n\n<p>对于发生在时刻 <code>t</code> 的每个查询，需要找出在&nbsp;<code>t</code> 时刻在选举中领先的候选人的编号。</p>\n\n<p>在&nbsp;<code>t</code> 时刻投出的选票也将被计入我们的查询之中。在平局的情况下，最近获得投票的候选人将会获胜。</p>\n\n<p>实现 <code>TopVotedCandidate</code> 类：</p>\n\n<ul>\n\t<li><code>TopVotedCandidate(int[] persons, int[] times)</code> 使用&nbsp;<code>persons</code> 和 <code>times</code> 数组初始化对象。</li>\n\t<li><code>int q(int t)</code> 根据前面描述的规则，返回在时刻 <code>t</code> 在选举中领先的候选人的编号。</li>\n</ul>\n&nbsp;\n\n<p><strong>示例：</strong></p>\n\n<pre>\n<strong>输入：</strong>\n[\"TopVotedCandidate\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\"]\n[[[0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]], [3], [12], [25], [15], [24], [8]]\n<strong>输出：</strong>\n[null, 0, 1, 1, 0, 0, 1]\n\n<strong>解释：</strong>\nTopVotedCandidate topVotedCandidate = new TopVotedCandidate([0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]);\ntopVotedCandidate.q(3); // 返回 0 ，在时刻 3 ，票数分布为 [0] ，编号为 0 的候选人领先。\ntopVotedCandidate.q(12); // 返回 1 ，在时刻 12 ，票数分布为 [0,1,1] ，编号为 1 的候选人领先。\ntopVotedCandidate.q(25); // 返回 1 ，在时刻 25 ，票数分布为 [0,1,1,0,0,1] ，编号为 1 的候选人领先。（在平局的情况下，1 是最近获得投票的候选人）。\ntopVotedCandidate.q(15); // 返回 0\ntopVotedCandidate.q(24); // 返回 0\ntopVotedCandidate.q(8); // 返回 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= persons.length &lt;= 5000</code></li>\n\t<li><code>times.length == persons.length</code></li>\n\t<li><code>0 &lt;= persons[i] &lt; persons.length</code></li>\n\t<li><code>0 &lt;= times[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>times</code> 是一个严格递增的有序数组</li>\n\t<li><code>times[0] &lt;= t &lt;= 10<sup>9</sup></code></li>\n\t<li>每个测试用例最多调用 <code>10<sup>4</sup></code> 次 <code>q</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class TopVotedCandidate {\npublic:\n    TopVotedCandidate(vector<int>& persons, vector<int>& times) {\n\n    }\n    \n    int q(int t) {\n\n    }\n};\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * TopVotedCandidate* obj = new TopVotedCandidate(persons, times);\n * int param_1 = obj->q(t);\n */"},{"value":"java","text":"Java","defaultCode":"class TopVotedCandidate {\n\n    public TopVotedCandidate(int[] persons, int[] times) {\n\n    }\n    \n    public int q(int t) {\n\n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * TopVotedCandidate obj = new TopVotedCandidate(persons, times);\n * int param_1 = obj.q(t);\n */"},{"value":"python","text":"Python","defaultCode":"class TopVotedCandidate(object):\n\n    def __init__(self, persons, times):\n        \"\"\"\n        :type persons: List[int]\n        :type times: List[int]\n        \"\"\"\n\n\n    def q(self, t):\n        \"\"\"\n        :type t: int\n        :rtype: int\n        \"\"\"\n\n\n\n# Your TopVotedCandidate object will be instantiated and called as such:\n# obj = TopVotedCandidate(persons, times)\n# param_1 = obj.q(t)"},{"value":"python3","text":"Python3","defaultCode":"class TopVotedCandidate:\n\n    def __init__(self, persons: List[int], times: List[int]):\n\n\n    def q(self, t: int) -> int:\n\n\n\n# Your TopVotedCandidate object will be instantiated and called as such:\n# obj = TopVotedCandidate(persons, times)\n# param_1 = obj.q(t)"},{"value":"c","text":"C","defaultCode":"\n\n\ntypedef struct {\n    \n} TopVotedCandidate;\n\n\nTopVotedCandidate* topVotedCandidateCreate(int* persons, int personsSize, int* times, int timesSize) {\n    \n}\n\nint topVotedCandidateQ(TopVotedCandidate* obj, int t) {\n    \n}\n\nvoid topVotedCandidateFree(TopVotedCandidate* obj) {\n    \n}\n\n/**\n * Your TopVotedCandidate struct will be instantiated and called as such:\n * TopVotedCandidate* obj = topVotedCandidateCreate(persons, personsSize, times, timesSize);\n * int param_1 = topVotedCandidateQ(obj, t);\n \n * topVotedCandidateFree(obj);\n*/"},{"value":"csharp","text":"C#","defaultCode":"public class TopVotedCandidate {\n\n    public TopVotedCandidate(int[] persons, int[] times) {\n\n    }\n    \n    public int Q(int t) {\n\n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * TopVotedCandidate obj = new TopVotedCandidate(persons, times);\n * int param_1 = obj.Q(t);\n */"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} persons\n * @param {number[]} times\n */\nvar TopVotedCandidate = function(persons, times) {\n\n};\n\n/** \n * @param {number} t\n * @return {number}\n */\nTopVotedCandidate.prototype.q = function(t) {\n\n};\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * var obj = new TopVotedCandidate(persons, times)\n * var param_1 = obj.q(t)\n */"},{"value":"typescript","text":"TypeScript","defaultCode":"class TopVotedCandidate {\n    constructor(persons: number[], times: number[]) {\n        \n    }\n\n    q(t: number): number {\n        \n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * var obj = new TopVotedCandidate(persons, times)\n * var param_1 = obj.q(t)\n */"},{"value":"php","text":"PHP","defaultCode":"class TopVotedCandidate {\n    /**\n     * @param Integer[] $persons\n     * @param Integer[] $times\n     */\n    function __construct($persons, $times) {\n\n    }\n\n    /**\n     * @param Integer $t\n     * @return Integer\n     */\n    function q($t) {\n\n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * $obj = TopVotedCandidate($persons, $times);\n * $ret_1 = $obj->q($t);\n */"},{"value":"swift","text":"Swift","defaultCode":"\nclass TopVotedCandidate {\n\n    init(_ persons: [Int], _ times: [Int]) {\n\n    }\n    \n    func q(_ t: Int) -> Int {\n\n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * let obj = TopVotedCandidate(persons, times)\n * let ret_1: Int = obj.q(t)\n */"},{"value":"kotlin","text":"Kotlin","defaultCode":"class TopVotedCandidate(persons: IntArray, times: IntArray) {\n\n    fun q(t: Int): Int {\n\n    }\n\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * var obj = TopVotedCandidate(persons, times)\n * var param_1 = obj.q(t)\n */"},{"value":"dart","text":"Dart","defaultCode":"class TopVotedCandidate {\n\n  TopVotedCandidate(List<int> persons, List<int> times) {\n    \n  }\n  \n  int q(int t) {\n    \n  }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * TopVotedCandidate obj = TopVotedCandidate(persons, times);\n * int param1 = obj.q(t);\n */"},{"value":"golang","text":"Go","defaultCode":"type TopVotedCandidate struct {\n\n}\n\n\nfunc Constructor(persons []int, times []int) TopVotedCandidate {\n\n}\n\n\nfunc (this *TopVotedCandidate) Q(t int) int {\n\n}\n\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * obj := Constructor(persons, times);\n * param_1 := obj.Q(t);\n */"},{"value":"ruby","text":"Ruby","defaultCode":"class TopVotedCandidate\n\n=begin\n    :type persons: Integer[]\n    :type times: Integer[]\n=end\n    def initialize(persons, times)\n\n    end\n\n\n=begin\n    :type t: Integer\n    :rtype: Integer\n=end\n    def q(t)\n\n    end\n\n\nend\n\n# Your TopVotedCandidate object will be instantiated and called as such:\n# obj = TopVotedCandidate.new(persons, times)\n# param_1 = obj.q(t)"},{"value":"scala","text":"Scala","defaultCode":"class TopVotedCandidate(_persons: Array[Int], _times: Array[Int]) {\n\n    def q(t: Int): Int = {\n\n    }\n\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * var obj = new TopVotedCandidate(persons, times)\n * var param_1 = obj.q(t)\n */"},{"value":"rust","text":"Rust","defaultCode":"struct TopVotedCandidate {\n\n}\n\n\n/**\n * `&self` means the method takes an immutable reference.\n * If you need a mutable reference, change it to `&mut self` instead.\n */\nimpl TopVotedCandidate {\n\n    fn new(persons: Vec<i32>, times: Vec<i32>) -> Self {\n\n    }\n    \n    fn q(&self, t: i32) -> i32 {\n\n    }\n}\n\n/**\n * Your TopVotedCandidate object will be instantiated and called as such:\n * let obj = TopVotedCandidate::new(persons, times);\n * let ret_1: i32 = obj.q(t);\n */"},{"value":"racket","text":"Racket","defaultCode":"(define top-voted-candidate%\n  (class object%\n    (super-new)\n    \n    ; persons : (listof exact-integer?)\n    ; times : (listof exact-integer?)\n    (init-field\n      persons\n      times)\n    \n    ; q : exact-integer? -> exact-integer?\n    (define/public (q t)\n      )))\n\n;; Your top-voted-candidate% object will be instantiated and called as such:\n;; (define obj (new top-voted-candidate% [persons persons] [times times]))\n;; (define param_1 (send obj q t))"},{"value":"erlang","text":"Erlang","defaultCode":"-spec top_voted_candidate_init_(Persons :: [integer()], Times :: [integer()]) -> any().\ntop_voted_candidate_init_(Persons, Times) ->\n  .\n\n-spec top_voted_candidate_q(T :: integer()) -> integer().\ntop_voted_candidate_q(T) ->\n  .\n\n\n%% Your functions will be called as such:\n%% top_voted_candidate_init_(Persons, Times),\n%% Param_1 = top_voted_candidate_q(T),\n\n%% top_voted_candidate_init_ will be called before every test case, in which you can do some necessary initializations."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule TopVotedCandidate do\n  @spec init_(persons :: [integer], times :: [integer]) :: any\n  def init_(persons, times) do\n    \n  end\n\n  @spec q(t :: integer) :: integer\n  def q(t) do\n    \n  end\nend\n\n# Your functions will be called as such:\n# TopVotedCandidate.init_(persons, times)\n# param_1 = TopVotedCandidate.q(t)\n\n# TopVotedCandidate.init_ will be called before every test case, in which you can do some necessary initializations."}],"testcase":"[\"TopVotedCandidate\",\"q\",\"q\",\"q\",\"q\",\"q\",\"q\"]\n[[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]","testable":true,"templateMeta":{"classname":"TopVotedCandidate","maxbytesperline":200000,"constructor":{"params":[{"type":"integer[]","name":"persons"},{"type":"integer[]","name":"times"}]},"methods":[{"name":"q","params":[{"type":"integer","name":"t"}],"return":{"type":"integer"}}],"systemdesign":true,"params":[{"name":"inputs","type":"integer[]"},{"name":"inputs","type":"integer[]"}],"return":{"type":"list<String>","dealloc":true}}}